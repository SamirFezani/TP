CREATE OR REPLACE TRIGGER INSERT_WORKER_CHECK
BEFORE INSERT ON ALL_WORKERS_ELAPSED
FOR EACH ROW
DECLARE
BEGIN
  RAISE_APPLICATION_ERROR(-20000, 'Insertion not allowed into ALL_WORKERS_ELAPSED view.');
END INSERT_WORKER_CHECK;
/

CREATE OR REPLACE TRIGGER AUDIT_ROBOT_ADDITION
AFTER INSERT ON robots
FOR EACH ROW
BEGIN
  INSERT INTO AUDIT_ROBOT (robot_id, addition_date)
  VALUES (:NEW.robot_id, SYSDATE);
END AUDIT_ROBOT_ADDITION;
/

CREATE OR REPLACE TRIGGER CHECK_FACTORY_COUNT
BEFORE INSERT OR UPDATE ON FACTORIES
DECLARE
  factory_count NUMBER;
  worker_table_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO factory_count FROM factories;
  SELECT COUNT(*) INTO worker_table_count FROM user_tables WHERE table_name LIKE 'WORKERS_FACTORY\_%';
  
  IF factory_count != worker_table_count THEN
    RAISE_APPLICATION_ERROR(-20001, 'Number of factories does not match the number of worker tables.');
  END IF;
END CHECK_FACTORY_COUNT;
/

CREATE OR REPLACE TRIGGER CALCULATE_WORKER_DURATION
BEFORE UPDATE ON workers
FOR EACH ROW
DECLARE
  duration NUMBER;
BEGIN
  IF :OLD.end_date IS NULL AND :NEW.end_date IS NOT NULL THEN
    duration := ROUND((:NEW.end_date - :NEW.start_date));
    :NEW.duration := duration;
  END IF;
END CALCULATE_WORKER_DURATION;
/
